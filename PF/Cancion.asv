classdef Cancion
    %UNTITLED Summary of this class goes here
    %   Detailed explanation goes here

    properties
        name
        audio
        num_fragment
        fft_song
        fs_song
        duration
        correlaciones
        matrix_fragment
        matrix_fragment_fft
        frag_time
    end

    methods
        function obj = Cancion(name,path,fragment_time)
            obj.name=name;
            obj.frag_time=fragment_time;
            [obj.audio,obj.fs_song]=audioread(fullfile(path,name));
            obj.duration=size(obj.audio,1)/obj.fs_song;
            obj.num_fragment=floor(obj.duration/fragment_time);
            obj.matrix_fragment=cell(1,obj.num_fragment);
            for i=1:obj.num_fragment%Creamos los fragmentos de la canci√≥n
                if i==1
                    obj.matrix_fragment{i}=obj.audio(1:obj.fs_song);
                
                else
                    obj.matrix_fragment{i}=obj.audio(obj.fs_song*(i-1):obj.fs_song*i);
                end
            end
            fragment_fft(obj);
        end


        function fragment_fft(obj)
            obj.matrix_fragment_fft=cell(1,obj.num_fragment);
            disp(class(obj.matrix_fragment_fft))
            %disp(fprintf('Cancion %s',obj.name))
            %disp(fprintf('Fragmentos %d',obj.num_fragment))
            for i=1:obj.num_fragment
                obj.matrix_fragment_fft{i}=real(fft(obj.matrix_fragment{i}));
                %disp(length(obj.matrix_fragment_fft{i}))
            end
        
        
        end

        function result=CrCorr(obj,index,input)
                 [corr_g,des]=xcorr(input,obj.matrix_fragment_fft{index})
                 result=max(corr_g);
                 
        end

    end
end